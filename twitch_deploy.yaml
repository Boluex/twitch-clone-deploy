apiVersion: apps/v1
kind: Deployment
metadata:
  name: twitch-deploy
  namespace: twitch
  labels:
    app: twitch-deploy
spec:   
  replicas: 1
  selector:
    matchLabels:
      app: twitch-deploy
  template:
    metadata:
      labels:
        app: twitch-deploy
    spec:
      containers:
        - name: twitch-deploy
          image: docker.io/boluex/twitch-clone:1.0 
          ports:
            - containerPort: 3000
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      


---
apiVersion: v1
kind: Service
metadata:
  name: twitch-deploy
  namespace: twitch
spec:
  selector:
    app: twitch-deploy
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 3000
  type: ClusterIP


# ---
# apiVersion: metallb.io/v1beta1
# kind: IPAddressPool
# metadata:
#   name: my-ip-pool
#   namespace: metallb-system
# spec:
#   addresses:
#     - 192.168.1.240-192.168.1.250


# ---
# apiVersion: metallb.io/v1beta1
# kind: L2Advertisement
# metadata:
#   name: l2-advertisement
#   namespace: metallb-system
# spec:
#   ipAddressPools:
#     - my-ip-pool
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: oladejiolaoluwa46@gmail.com@example.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: twitch-deploy
  namespace: twitch
spec:
  ingressClassName: nginx
  rules:
  - host: myapp.local
    http: 
       paths:
       -  path: /
          pathType: Prefix
          backend:
            service:
              name: twitch-deploy
              port:
                number: 8000
  tls:
  - hosts:
    - myapp.local
    secretName: twitch-tls-secret

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: twitch-deploy
  namespace: twitch
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: twitch-deploy
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50


---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: twitch-deploy-role
  namespace: twitch
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch","create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: twitch-deploy-rolebinding
  namespace: twitch
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: twitch-deploy-role
subjects:
  - kind: User
    name: jane
    apiGroup: rbac.authorization.k8s.io





